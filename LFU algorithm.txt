import java.io.*;
import java.util.*;

public class ReplacePageLFU {
    public static void main(String args[]) throws IOException {
        BufferedReader obj = new BufferedReader(new InputStreamReader(System.in);
        int f, ch, pgf = 0, n, chn = 0;
        Map<Integer, Integer> pageFrequency = new HashMap<>();
        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> pageFrequency.get(a) - pageFrequency.get(b));
        Set<Integer> frame = new HashSet<>();

        do {
            System.out.println("Menu");
            System.out.println("3. LFU");
            System.out.println("4. EXIT");
            System.out.print("ENTER YOUR CHOICE: ");
            ch = Integer.parseInt(obj.readLine());

            switch (ch) {
                case 3:
                    System.out.print("Enter the number of frames: ");
                    f = Integer.parseInt(obj.readLine());

                    System.out.print("Enter the number of pages: ");
                    n = Integer.parseInt(obj.readLine());

                    System.out.println("Enter the page numbers: ");
                    int[] pages = new int[n];
                    for (int i = 0; i < n; i++) {
                        pages[i] = Integer.parseInt(obj.readLine());
                    }

                    for (int page : pages) {
                        if (frame.contains(page)) {
                            pageFrequency.put(page, pageFrequency.get(page) + 1);
                        } else {
                            if (frame.size() == f) {
                                int toRemove = pq.poll();
                                frame.remove(toRemove);
                            }
                            frame.add(page);
                            pageFrequency.put(page, 1);
                            pq.offer(page);
                            pgf++;
                        }
                    }

                    System.out.println("Page fault: " + pgf);
                    break;
                case 4:
                    break;
            }
        } while (ch != 4);
    }
}
